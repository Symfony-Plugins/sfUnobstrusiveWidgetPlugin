jQuery.ui.spinner
jQuery.ui extension for a numeric spinner

Licensing
----------

Written by Brant Burnett <http://btburnett.com/> <mailto:btburnett3@gmail.com>
jQuery.ui.spinner is distributed under the terms of the GNU Lesser General Public License (GPL)

jQuery.ui.spinner is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jQuery.ui.spinner is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with jQuery.ui.spinner.  If not, see <http://www.gnu.org/licenses/>.

The basic rules of the license are the you can use and change the code here as you see fit,
but you can't remove the license and you can't sell the code.  Please review the license
for more details.

Source Control
---------------

The root branch for jQuery.ui.spinner is hosted on GitHub at
<http://github.com/btburnett3/jquery.ui.spinner/>.

Overview
---------

jQuery.ui.spinner is based upon jQuery UI 1.7 <http://ui.jquery.com>, and provides a new
spinner widget that can be added to any text box.  It fully uses the theme settings created by the
ThemeRoller, and has been tested for compatibility with IE 6/7/8, Firefox 2/3, Safari 3.1, and
Opera 9.  Supports both mouse and keyboard input, and validates input directly into the text box.
It requires only minimal CSS to be supplied, mostly relying on the CSS built into the jQuery UI
framework.

I did a lot of experimenting to try to find the best method that would work across a variety of
web browswers while still using the jQuery UI theme framework rather than images.  I finally
settled on this method of spans with display: inline-block set on them, which is then
positioned next to the text box using absolute positioning, relative to an outer wrapper that
is relative positioned.  The only restriction I know of with this system is that if you put
a right margin on the text box, you must specify it in pixels.

To use, add the CSS found in ui.spinner.css to your jQuery UI CSS files, or link to it
separately.  Then include the ui.spinner.js or ui.spinner.min.js script file beneath your
include for jQuery UI.  Finally, during or after $(document).ready call $("#myinput").spinner()
to add the spinner to your text box.

Options
--------

The spinner also support a variety of options which can be passed in an object to the
constructor:

	min (integer)
		Minimum allowed value of the spinner.  If left with the default, null, there will be no
		minimum unless the input has a maximum length.  Then the minimum will be calculated.  For
		a textbox with a maximum length of 3 characters, the minimum will be -99, etc.
					
	max (integer)
		Maximum allowed value of the spinner.  If left with the default, null, there will be no
		maximum unless the input has a maximum length.  Then the maximum will be calculated.  For
		a textbox with a maximum length of 3 characters, the maximum will be 999, etc.
		
	increment (integer)
		A positive number that the spinner should be incremented by when up is clicked or pressed.
		The spinner will be decremented by this amount for down.  Defaults to 1.
		
	largeIncrement (integer)
		Used like increment, but for when page up or page down are pressed to jump in larger
		amounts.  Defaults to 10.
		
	className (string)
		Optional class name that should be applied to the container span that is created around
		the input and the buttons
		
	showOn (string)
		Defines when the spin buttons are visible
		'always': Spin buttons are always visible
		'focus': Spin buttons are only visible when the input has focus
		'hover': Spin buttons are only visible when the mouse is hovering over the input
		'both': Spin buttons are visible when the input has focus or is being hovered over
		
	width (integer)
		Width in pixels of the spinner.  Defaults to 16.
		
	spinDelayOne (integer)
		If you hold down a direction arrow, page up/down, or mouse button on the spinner, this
		is the amount of time in milliseconds before the increment/decrement repeats.  Defaults
		to 500 milliseconds.
		
	spinDelayTwo (integer)
		After you hold down a key/button for a while, the spinner will speed up.  This is the
		delay in milliseconds between each increment/decrement during the faster spin.  Defaults
		to 100 millseconds.
		
	spinsBeforeDelayTwo (integer)
		This is how many times spinDelayOne should be used before the spinner speeds up and
		switches to using spinDelayTwo.  Defaults to 3.
		
Example Option Usage
---------------------

0 - 100 incrementing by 2:
	$("#myinput").spinner({min: 0, max: 100, increment: 2});
	
Show on hover/focus only:
	$("#myinput").spinner({showOn: 'both'});
	
Other Commands
---------------

The spinner also support commands after they are created, using the standard UI widget method
of passing strings.

$("#myinput").spinner("getValue")
	Returns the integer value of the input.  Returns null if the input is blank.
	
$("#myinput").spinner("setValue", value)
	Sets the integer value of the input.  Still validates against min and max, null blanks the
	input.
	
$("#myinput").spinner("enable")
	Enables the spinner and the input
	
$("#myinput").spinner("disable")
	Disables the spinner and the input
	
$("#myinput").spinner("destroy")
	Destroys the spinner, restoring the input to its previous state
	
$("#myinput").spinner("increment")
	Increments the spinner, just like you hit the button
	
$("#myinput").spinner("decrement")
	Decrements the spinner, just like you hit the button

$("#myinput").spinner("showButtons", [immediate])
	Shows the buttons if they are hidden.  If immediate is passed as true, the show won't be
	animated.
	
$("#myinput").spinner("hideButtons", [immediate])
	Hides the buttons if they are visible.  If immediate is passed as true, the hide won't be
	animated.
	
Version History
----------------

1.01
	Renamed from spinbuttons to spinner
	Implemented right/left and home/end keys per the DHTML Style Guide <http://dev.aol.com/dhtml_style_guide>
	Fixed destroy implementation
	Made setValue call change event on input

1.0
	Initial release